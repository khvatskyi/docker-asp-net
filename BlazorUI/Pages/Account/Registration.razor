@page "/Account/Register"

@layout AuthenticationLayout
@using Models.AccountModels;
@using Interfaces.IServices;
@using Microsoft.AspNetCore.Components

@inject IAccountService accountService
@inject NavigationManager NavigationManager

<link rel="stylesheet" type="text/css" href="PagesCss/alertStyle.css">

<div class="col-lg-12 card p-5">
    <EditForm Model="@user" OnValidSubmit="@RegisterUser">
        <FluentValidationValidator />
        <div>
            <h3 style="font-weight:bold; color: brown">Music Player Register</h3>
        </div>
        <br />
        <ValidationMessage For="@(() => user.email)" />
        <div class="card-columns row">
            <InputText class="form-control col-12" @bind-Value="user.email" placeholder="Email address" />
        </div>
        <br />
        <ValidationMessage For="@(() => user.userName)" />
        <div class="card-columns row">
            <InputText class="form-control col-12" @bind-Value="user.userName" placeholder="Username" />
        </div>
        <br />
        <ValidationMessage For="@(() => user.password)" />
        <div class="card-columns row">
            <input type="password" class="form-control col-12" @bind="user.password" placeholder="Password" />
        </div>
        <br />
        <ValidationMessage For="@(() => user.confirmPassword)" />
        <div class="card-columns row">
            <input type="password" class="form-control col-12" @bind="user.confirmPassword" placeholder="Confirm password" />
        </div>
        @if (ErrorMessageList != null)
        {
            <br />
            foreach (var message in ErrorMessageList)
            {
                <div class="alert alert-danger" role="alert">
                    <span>@message</span>
                </div>
            }
        }
        <br />
        <div class="row flex-nowrap align-items-center">
            <input type="submit" class="form-control col-6 btn btn-primary" value="Sign up" />
            <a href="Account/Login" class="col-7">Already an user?</a>
        </div>
    </EditForm>
</div>

@code {
    private RegisterViewModel user = new RegisterViewModel
    {
        email = "test@gmail.com",
        userName = "Carendoh",
        password = "0000a",
        confirmPassword = "0000a"
    };
    private List<string> ErrorMessageList;

    private async Task RegisterUser()
    {
        ErrorMessageList = null;
        try
        {
            await accountService.RegisterUserAsync(user);
            NavigationManager.NavigateTo("/");
        }
        catch (ARException e)
        {
            ErrorMessageList = e.MessageList;
        }
    }
}
